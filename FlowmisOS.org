:Einstellungen:
#+TITLE: Install FlowmisOS
#+STARTUP: folded hideblocks shrink
#+begin_src shell
mkdir ~/.config/doom/ ~/.config/doom/ ~/.config/doom/banner/ ~/.config/doom/themes/ ~/.config/doom/eshell/
cp -u ~/FlowmisOS/tangle/config.el ~/.config/doom/config.el && cp -u ~/FlowmisOS/tangle/init.el ~/.config/doom/init.el && cp -u ~/FlowmisOS/tangle/packages.el ~/.config/doom/packages.el && cp -R ~/FlowmisOS/tangle/banner/ ~/.config/doom/ && cp -R ~/FlowmisOS/tangle/themes/ ~/.config/doom/ && cp -R ~/FlowmisOS/tangle/eshell/ ~/.config/doom/ && echo '###########################Doom ready###########################'
cp -u ~/FlowmisOS/tangle/config.py ~/.config/qtile/config.py && cp -u ~/FlowmisOS/tangle/python-white.png ~/.config/qtile/pyhton-white.png && echo '###########################Qtile ready###########################'
cp -u ~/FlowmisOS/tangle/launcher.sh ~/.config/rofi/launchers/misc/launcher.sh
cp -u ~/FlowmisOS/tangle/mane.rasi ~/.config/rofi/launchers/misc/mane.rasi
cp -u ~/FlowmisOS/tangle/config.rasi ~/.config/rofi/config.rasi
cp -u ~/FlowmisOS/tangle/.xprofile ~/.xprofile
cp -u ~/FlowmisOS/tangle/.Xressources ~/.Xressources
cp -u ~/FlowmisOS/tangle/.bashrc ~/.bashrc
cp -u ~/FlowmisOS/tangle/alacritty.yml ~/.config/alacritty/alacritty.yml
cp -u ~/FlowmisOS/tangle/config.fish ~/.config/fish/config.fish
cp -u ~/FlowmisOS/tangle/.gitconfig ~/.gitconfig
cp -u ~/FlowmisOS/tangle/picom.conf ~/.config/picom/picom.conf
echo done
#+end_src

#+HTML_HEAD: <script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js"></script> <script> mermaid.initialize({startOnLoad:true}); </script> <style> .mermaid {  /* add custom styling */  } </style>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://fniessen.github.io/org-html-themes/src/readtheorg_theme/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://fniessen.github.io/org-html-themes/src/readtheorg_theme/css/readtheorg.css"/>
#+HTML_HEAD: <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
#+HTML_HEAD: <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://fniessen.github.io/org-html-themes/src/lib/js/jquery.stickytableheaders.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://fniessen.github.io/org-html-themes/src/readtheorg_theme/js/readtheorg.js"></script>
#+HTML_HEAD: <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML"></script>
#+HTML_HEAD: <script type="text/x-mathjax-config"> MathJax.Hub.Config({ displayAlign: "center", displayIndent: "0em", "HTML-CSS": { scale: 100,  linebreaks: { automatic: "false" }, webFont: "TeX" }, SVG: {scale: 100, linebreaks: { automatic: "false" }, font: "TeX"}, NativeMML: {scale: 100}, TeX: { equationNumbers: {autoNumber: "AMS"}, MultLineWidth: "85%", TagSide: "right", TagIndent: ".8em" }});</script>
#+HTML_HEAD: <style> #content{max-width:1800px;}</style>
#+HTML_HEAD: <style> p{max-width:800px;}</style>
#+HTML_HEAD: <style> li{max-width:800px;}</style
#+OPTIONS: toc:t num:nil
# Anmerkungen: :noexport:
# - [[https://mermaid-js.github.io/mermaid/#/][Mermaid]]
# - [[https://github.com/fniessen/org-html-themes][Style]]
# - bigblow statt readtheorg ist zweite einfach vorhanden Möglichkeit das Aussehen zu ändern
:END:
-------------------------------------------EMACS--------------------------------------------------------------------
[[org:~/FlowmisOS/FlowmisOS.org::DoomEmacs init][init.el]]
[[org:~/FlowmisOS/FlowmisOS.org::DoomEmacs packages][packages.el]]
[[org:~/FlowmisOS/FlowmisOS.org::DoomEmacs config][config.el]]
  - [[org:~/FlowmisOS/FlowmisOS.org::Keybindings][Keybindings]]
  - [[org:~/FlowmisOS/FlowmisOS.org::Funktionen][Funktionen]]
  - [[org:~/FlowmisOS/FlowmisOS.org::Erscheinungsbild][Erscheinungsbild]]
-------------------------------------------QTILE--------------------------------------------------------------------
[[org:~/FlowmisOS/FlowmisOS.org::Qtile config][config.py]]
-------------------------------------------TERMINAL-----------------------------------------------------------------
[[org:~/FlowmisOS/FlowmisOS.org::Bash][Bash]]
[[org:~/FlowmisOS/FlowmisOS.org::Alacritty][Alacritty]]
[[org:~/FlowmisOS/FlowmisOS.org::Fish][Fish]]
-------------------------------------------SYSTEMSTAR---------------------------------------------------------------
  + [[org:~/FlowmisOS/FlowmisOS.org::.xprofile][.xprofile]]
  + [[org:~/FlowmisOS/FlowmisOS.org::.Xressources][.Xressources]]
-------------------------------------------VM----------------------------------------------------------------------
[[org:~/FlowmisOS/FlowmisOS.org::Virtual Box][VirtualBox]]
-------------------------------------------------------------------------------------------------------------------

* ZEITNAH FlowmisOS
:LOGBOOK:
:END:

- [ ] Emacs Roam Dateien mit Erklärungen von [[~/Dropbox/emacs/org-roam/Notizen/2022-04-16-emacs-emacs-tipps-tricks.org][hier]] zu den Modulen verlinken!
- [ ] Dateien nach meiner Namens konvention umbenennen (siehe Unterpunkt hier unter Linux & Arch)
- [ ] DualBoot installieren und checken ob Update Zeug dann problemlos funktioniert oder ob VM nicht doch bessere Wahl ist
  - [ ] https://www.youtube.com/watch?v=0SI5btORaeM
  - [ ] https://www.youtube.com/watch?v=L1B1O0R1IHA
  - [ ] https://www.youtube.com/watch?v=LGhifbn6088
- [ ] Kann ich diese Repo privat stellen und trotzdem leicht clonen/verwenden um das Installationsskript etc. auszuführen oder ist entsprechend vorbereitete/angepasste Iso nötig
- [ ] Alacritty sweeter machen, so dass ähnlicher zu fish shell oder aber eshell besser machen und versuchen mehr mit emacs zu arbeiten und weniger im terminal
- [ ] komplettes Skript für arch installations .iso herstellen und dann einfach immer in iso integrieren, sodass es alles von selbst installiert
- [ ] git ssh verstehen und in skript mit rein
  - [ ] https://www.youtube.com/watch?v=3aKda-oXWc8
- [ ] Passwortdatei mit installieren lassen sodass ich mit decrypt key alle Passwörter auf Pc hab
- [ ] mein .xprofile durch .xressources ersetzen so wie bei DT
- [ ] Aussortieren dass nach installation alles unnötige gelöscht wird und minimum an Programmen etc vorhanden ist (während der installation geclonte repos mit sudo Gruppe rechten löschen und gegebenenfalls neu clonen als richtiger user)
- [ ] HDMI und zeite Bildschirme ebenso wie USB besser erkennen und formatieren können bzw Einstellungen machen können
- [ ] Grafikkartenprobleme lösen (https://wiki.freedesktop.org/nouveau/Optimus/,... )
- [ ] Qtile Widgets überarbeiten
  - [ ] Widgets überarbeiten
  - [ ] Transparenz der Dinge hinter Fullscreen oder zumindest der "Taskbar" auf 100% sodass Fullscreen schöner aussieht
  - [ ] Neue Floating Windows die aufpoppen in den Vordergrund bringen
- [ ] EMACS
  - [ ] Eigenes Theme überarbeiten -> Markierungszeug mit =+~*... schöner machen (verbatim heisst es?)
- [ ] .bashrc bashprofile und bashhistory zu configs
- [ ] Dependencys für Qtile und Emacs in Installskript, sodass es von Beginn an top funzt -> Wenn alles clean und fertig dann nochmal Neuinstallation in VirtualBox testen und generell cleane lauffähige VM oder Docker Container von meinem Betriebssystem erstellen - erst wenn es so stabil ist dass ich kaum noch Änderungen vornehme!
- [ ] Jupyter, WolframAplpha und Coding richtig einrichten in OrgMode -> und Brave in Buffer öffnen statt seperat
  - Jupyter mit Emacs ersetzen: https://www.youtube.com/watch?v=dh5dtKDWgyM -> Problem?: Interactive inputs gehen im org mode nicht so wie easy wie bei jupyter
  - https://github.com/ravarspath/emacs-conf
  - https://github.com/ravarspath/ob-wolfram
    so sollte ich es dann benutzen können:
  - https://www.youtube.com/watch?v=RD0o2pkJBaI
  - Jupyter hieß mal IPython und das konnte man auf jedenfall installieren und in Emacs nutzen - In Jupyter kann man Extensions importieren wie z.B. qgrid (ermöglich interaktiv mit Tabellen in Zelle zu agieren bissl wie in Excel) und SQL

* Linux & Arch

 1. ~Arch~ mit ~Linux-Kernel~ und der Paketverwaltung ~Pacman~ ist die Grundlage auf dem FlowmisOS aufbaut (ein Desktop Betriebssystem dass auf allen x86_64 kompatiblen Machinen mit circa 1 GiB Ram und etwa 2 GiB Speicher installiert werden kann)
 2. ~Bootstick/Iso~ mit ~Arch~ ist nötig um in ein ~live system~ booten zu können von dem aus man Arch, die gewollten Programme und Konfigurationsdateien installieren kann. Es ist machbar die heruntergeladene ISO zu bearbeiten (Iso Master - Linux) und ihr direkt ein Installationsskript mitzugeben, sodass man nach dem booten eigentlich nur noch das Installationsskript in der virtuellen zshell ausführen muss.

** Data

*** Ordnerstruktur
- Tool um Ordner und Dateistruktur abzubilden: =tree=
    #+begin_src shell :dir /sudo:: :results none
    sudo pacman -S tree
    sudo tree -CL 1 /
    #+end_src
  - Flags (siehe auch ~sudo man tree~):
    -d = nur Ordner ohne Dateien
    -L = zeigt Ordner nur bis zu dem Level das man angibt, also bei -L 2 zeigt es die Ordner im aktuellen Verzeichnis + die darunter, aber nicht weiter
    -C = gibt dem Output Farbe
- Linux Standard Dateisystem erklärt:
  - mit dem Tool tree kann man sich die unterste Ordnerstruktur von Linux, also die Wurzel des Baums, bzw. den root Ordner anzeigen lassen (/):
    [[~/Dropbox/2nd-brain/org-roam/notes/bilder/2022-12-13_14-46.png]]
  - Bedeutung der Ordner:
    - /bin - binaries = essentielle asuführbare Dateien (ls, curl, gzip,... ~which curl~ um zu sehen wo die binaries von beispielsweise curl liegen)
    - /sbin - system binaries = system binaries für root und superuser (mount, mkswap,...)
    - /usr/bin - nicht essentielle vom Nutzer hinzugefügte binaries
    - $PATH - umgebungsvariable die alle binaries bzw. ausführbare Dateien enthält (~echo $PATH~ um diese anzuzeigen)
    - /lib - libaries = enthält code etc. um binaries ausführen zu können (geteilter Code zwischen binaries, system binaries, user binaries)
    - /etc - et cetera oder auch editable text config genannt = human readable textbasierete Konfigurationsdateien um bestimmt Systemeinstellungen zu setzen
    - /home - Linux kann mehrere Nutzer enthalten, die man hier finden kann und deren spezifische Nutzerdaten/Konfigurationen dort unter dem Nutzername gespeichert werden -> nicht jeder soll Daten von anderen sehen können und auf Systemkonfigurationen etc. die unterhalb liegen zugreifen können
    - /boot - enthält Dateien die für den Bootvorgang nötig sind wie z.B. den Linux Kernel
    - /dev - device files = Ort um mit interner verbauter oder externer angeschlossener Hardware und deren Treiber zu agieren
    - /var - variablen bzw. variable Dateien = enthält Dateien die sich während der Nutzung ändern (log-files, cache-files etc.)
    - /tmp - temporary files = nach reboot oder ähnlichem sind diese nicht mehr vorhanden
    - /proc - eingebildetes Dateisystem = existiert nicht wirklich bzw. wird kurzzeitig im RAM erstellt/genutzt wenn Kernel bestimmte Dinge machen muss, oder bestimmte Prozesse verfolgt
    - /opt - optionale Software und Dateien = wird man wenig drin machen

*** Namensgebung
- Alle Dateien ausschließlich mit kleinen Buchstaben benennen -> Windows versteht kein Unterschied zwischen Groß- und Kleinschreibung aber Linux schon und das kann dann eventuell zu Problemen führen
  - Nützlicher Befehl: Erst perl-rename in Arch als Paket installieren und dann in dem gewünschten Verzeichnis diesen Befehl ausführen ~perl-rename 'y/A-Z/a-z/' *~
- Wörter nicht mit Leerzeichen trennen und nicht mit _ sondern mit - weil das bei einem Datum Standard ist und es damit am wenigsten zu Problemen kommt
  - Nützlicher Befehl: Erst perl-rename in Arch als Paket installieren und dann in dem gewünschten Verzeichnis diesen Befehl ausführen ~perl-rename 'y/ //-/' *~
- Keinerlei Sonderzeichen im Dateiname verwenden und vorallem nicht $&/
- Name des Projekts oder Kategorie in Name rein
- Bei Projekten Name des Autors und gegebenenfalls Versionsnummer
- Datum und eventuell Timestamp der letzten Bearbeitung -> Format nach ISO 8601: YYYY-MM-DD
- Nur mit . beginnen wenn die Datei nicht überall sichtbar sein soll

*** Sicherung/Backups

- Systemsicherung mache ich bisher nicht, aber da meine Daten gesichert sind/werden kann ich jederzeit ein neues System aufsetzen - kritische Dinge sollte ich eh immer in einer VM machen, sodass es nicht passier dass mir das ganze System abschmiert
- Meine Backup der Daten erfolgt wie hier erklärt:

**** Git
- Git kann für dein Eigengebrauch sowie für kollektive Bearbeitung von Dateien genutzt werden, da es Veränderungen über die Zeit zu dokumentieren vermag
    #+CAPTION: Git Overview
    #+ATTR_HTML: :width 800
    [[file:bilder/2022-12-15-git-5.png]]
- Git nutzt Kryptographie und die die Integrität der Daten sicherzustellen. Jede Datei und jeder Commit der in ein Repo eingeht und verändert wird, wird mit in einem Hashfunktion gegeben und führt zu einer checksum. Jeder geänderter Bit würde die Checksum verändern und dadurch wird sichergestellt, dass keine Bits verloren gehen. Jede Änderung einer Datei, eines Commits,... führt dazu dass sich die ID und die IDs aller darauf folgenden Sicherungspunkte ändern. Bei einer Commit ID kann man sicher sein dass das Projekt exakt dem Inhalt des zuvor gemachten Commits entspricht und am Commit selbst nichts verändert wurde und zudem, dass nichts in der Geschichte bis zu diesem Commit verändert wurde, da auch das die aktuelle Commit ID ändern würde.
- Commit:
  1. Add the _right_ changes
     - Nicht einfach alles was verändert wurde in einen commit packen - nur das stagen was inhaltlich gut in einen aussagekräftigen commit passt
     - große commits lieber aufteilen und mehrmals nach unterschiedlichen Themen stagen
     - auch innerhalb einer Datei kann man auswählen welche von mehreren Änderungen man stagen will: ~git add -p "Dateiname"~ + mit y und n wählen was gestaged werden soll -> git status sollte dann die Datei bei staged und unstaged aufführen
  2. Compose _good_ commit messages
     - Zeile 1: Subject - Kurzbeschreibung (sollte gewisse Länge nicht unterschreiten)
     - Zeile 3 (durch leere Zeile 2 erkennt git das nun der Body kommt): Body - more detailed (was wurde geändert und warum, auf was muss weiter geachtet werden...)
  3. check the subject and body of commits with ~git log~
- Branching Strategies:
    #+CAPTION: Git Overview
    #+ATTR_HTML: :width 800
    [[file:bilder/2022-12-15-git-1.png]]
  1. Da git es einem nicht vorschreibt sollte im Team ein branching workflow schriftlich im Repo ausgemacht werden (avoid collisions and mistakes) - Abhängig von Größe des Teams/Projekts und wie Veröffentlichungen etc. gehandhabt werden -> erlaubt neuen Teilnehmern schnellen Einstieg
  2. Sinnvoll ist beispielsweise eine funktionelle Aufteilung in feature (short-lived branch die in develop branch münden), develop (mündet nach gewisser Testphase in main branch) & main (long-running branch) branches!
  3. Unterschiedliche Workflows:
    #+CAPTION: Subversion-Style Workflow
    #+ATTR_HTML: :width 800
    [[file:bilder/2022-12-15-git-2.png]]
    A centralized workflow is very common, especially from people transitioning from a centralized system. Git will not allow you to push if someone has pushed since the last time you fetched, so a centralized model where all developers push to the same server works just fine.
    #+CAPTION: Integration Manager Workflow
    #+ATTR_HTML: :width 800
    [[file:bilder/2022-12-15-git-3.png]]
    integration manager — person who commits to the 'blessed' repository. A number of developers then clone from that repository, push to their own independent repositories, and ask the integrator to pull in their changes. This is the type of development model often seen with open source or GitHub repositories.
    #+CAPTION: Dictator and Lieutenants Workflow
    #+ATTR_HTML: :width 800
    [[file:bilder/2022-12-15-git-4.png]]
    workflow like that of the Linux kernel. People ('lieutenants') are in charge of a specific subsystem of the project and they merge in all changes related to that subsystem. Another integrator (the 'dictator') can pull changes from only his/her lieutenants and then push to the 'blessed' repository that everyone then clones from again.
- Pull Request:
  1.
- Backup with git:
  1. in Ordner 1 gehen von dem Backup gemacht werden soll und git repo initiieren ~git init~ (alternativ in leerem Ornder ~git init~ und dann alle Dateien in diesen Ordner kopieren)
  2. ~git status~ um die vorhandenen Dateien und Ordner anzuzeigen
  3. ~vim .gitignore~ und ergänzen um Name von Dateien/Ordner, die nicht gestaged, gecloned,... werden sollen -> nun nochmals ~git status~ und Dateien/Ordner sollten nun nicht mehr angezeigt werden
  4. ~git add .~
  5. ~git status~ (Dateien sollten nun grün, also gestaged sein)
  6. ~git commit -m "erster commit"~
  7. in den Ornder 2 gehen wo das Backup rein soll und dort ~git init~ + ~git remote add origin "Pfad zum Ordner 1"~
  8. zurück in Ordner 1 gehen und ~git remote add origin "Pfad zum Ordner 2"~ die beiden Ordner koppeln
  9. In Ordner 2 gehen und Dateien laden mit ~git pull origin master~
  10. Nun ein Skript erstellen das aus Ordner 2 ~git pull~ ausführt und regelmäßig und vorallem vor dem update des backups mit git pull in Ordner 1 die Änderungen committen!
  11. _Alternativ git bundle oder git mirror:_
    ~git bundle~ - 1 Datei die man leicht kopieren kann oder per Mail verschicken
      - See [[https://git-scm.com/book/en/v2/Git-Tools-Bundling][bundle]] - also [[https://stackoverflow.com/questions/2545765/how-can-i-email-someone-a-git-repository/2545784#2545784]["How can I email someone a git repository?"]] with the command: ~git bundle create /tmp/foo-all --all~
      - using that bundle, you can clone it, specifying a non-existent folder (outside of any git repo): ~git clone /tmp/foo-all newFolder~
      ~git clone --mirror other/repo.git~
  12. _Unterschied mirror & bundle:_
    ~git bundle --all~
      - docs: man git-bundle, man git-rev-list
      - Atomic = "Hot-Copy"
      - Bundles are dump files and can be directly used with git (verify, clone, etc.).
      - Supports incremental extraction.
      - Verifiable via git bundle verify.
      ~git clone --mirror~
      - docs: man git-clone, man git-fsck, What's the difference between git clone --mirror and git clone --bare
      - Atomic = "Hot-Copy"
      - Mirrors are real git repositories.
      - Primary intention of this command is to build a full active mirror, that periodically fetches updates from the original repository.
      - Supports hardlinks for mirrors on same file system to avoid wasting space.
      - Verifiable via git fsck.
      - Mirrors can be used as a basis for a full file backup script.

**** rsync
Vorteil gegenüber git ist dass man sich commits sparen kann und es einfach zu handhaben ist als git. Es gibt auch eine gui Variante wenn man nicht das cli nutzen will (heißt =grsync=)
- ~sudo pacman -S rsync~
- ~sudo man rsync~ (rsync "Optionen/Flags" "Source" "Ziel")
- wichtige commands:
  - Backup erstellen: ~rsync -arv "/Pfad/Ordner mit Dateien" "/Pfad/Backup-Ordner"~ (a = archive - sollte man machen um alles vollständig mit Attributen zu übertragen; v = verbose - zeigt an was gemacht wird)
  - Backup auf Server/Remote: ~rsync -arv "/Pfad/Ordner mit Dateien" "flowmis@192.168.10.127:/home/flowmis/Backup-Ordner"~ (IP etc. halt anpassen - geht easy mit ssh)
  - Sicheres Update des Backups nachdem Änderungen vorgenommen wurden (gelöschte Dateien werden beim Backup nicht gelöscht! - namentlich geänderte Dateien sind dann doppelt vorhanden?):  ~rsync -aurnv "/Pfad/Ordner mit Dateien" "/Pfad/Backup-Ordner"~ (u = update - nur neue und inhaltlich geänderte Dateien werden übertragen; n = dry run - *ACHTUNG:* macht die Aktion nicht wirklich und zeigt nur an was es machen würde -> wenn ich damit zufrieden bin gleichen Befehl nun einfach ohne n und dann macht updated es das Backup)
  - Schnelles Update Backup:  ~rsync -aurv "/Pfad/Ordner mit Dateien" "/Pfad/Backup-Ordner"~
  - Schnelles Update Backup + Löschen im Backup falls was gelöscht wurde:  ~rsync -aurv --delete "/Pfad/Ordner mit Dateien" "/Pfad/Backup-Ordner"~


** Programme

*** Terminal/Konsole/Shell/CLI
| Terminal                                                                                    | Console                                                                                                                                          | Shell                                                                                                     | Command-line                                                                                                                                     |
| <35>                                                                                        | <35>                                                                                                                                             | <35>                                                                                                      | <35>                                                                                                                                             |
|---------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------|
| gnome-terminal, command prompt,...                                                          | Xbox, Playstation, Wii, Switch,...                                                                                                               | bash, fish, zsh,sh,cmd,Power Shell,...                                                                    | DOS Shell,...                                                                                                                                    |
| text input and output environment                                                           | physical terminal = console                                                                                                                      | command-line interpreter                                                                                  | command line = command prompt = type of interface                                                                                                |
| wrapper program that runs a shell & allows to enter commands                                | -                                                                                                                                                | shell = program that actually processes commands and outputs results                                      | command-line interface = any type of interface that is used to enter (textual) commands. One of these is the terminal, but some programs have their own command-line interfaces |
| a program that displays a graphical interface and allows you to interact with the shell     | consisted of a single keyboard and monitor plugged into a dedicated serial console port on a computer for low-level direct communication with the operating system | is a user interface for accessing the services of an operating system                                     | a computer program that processes commands in the form of lines of text - user typically interacts with the shell via a command-line interface (CLI) |
| a device that allows users to interact with computers, typically via a keyboard and display | a physical terminal that is the primary terminal that is directly connected to a machine - it is recognized by the operating system as a (kernel-implemented) terminal | a primary interface that users see when they log in, and its primary function is to launch other programs | an interface that allows a user to type a command (which is expressed as a sequence of characters — typically a command name followed by some parameters) and then press the Return key to execute that command |

*** Pacman

https://wiki.archlinux.de/title/Pacman
- Spiegelserver richtig einrichten dass hier keine Probleme entstehen

| man pacman             | Manual                                                                        |
| <30>                   | <120>                                                                         |
|------------------------+-------------------------------------------------------------------------------|
| pacman -S              | Packet installieren                                                           |
|                        | sudo pacman -S emacs -> installiert EMACS                                     |
| pacman -Sy             | nur sync (=apt-get update)                                                    |
| pacman -Syu            | sync und update (=apt-get update + apt-get upgrade)                           |
| pacman -Ss emacs       | sucht nach Paketen zu EMACS                                                   |
| pacman -Ss ^emacs      | sucht nach Paketen die mit emacs beginnen                                     |
| pacman -R emacs        | Remove package EMACS                                                          |
| pacman -Rs emacs       | Remove package EMACS + Dependencies                                           |
| pacman -Rns emacs      | Remove Paket + Dependencies + Configfiles des Programms -> vollst. deinstall. |
| pacman -Q              | zeigt alle installierten Pakete an                                            |
| pacman -Qe             | zeigt nur die Programme an die man selbst installiert hat                     |
| pacman -Qdt            | zeigt nicht mehr benötigte dependencies                                       |
| pacman -U emacs.tar.gz | installiert lokale Datei emacs.tar.gz                                         |

*** wichtige/gute Programme
- Prinzipielle Philosophie: Möglichst wenige aber dafür geile Programme auf dem Gerät installieren und alle kleinen Anwendungsfälle über Browser-/Webanwendungen

| Kategorie                                               | Programme                                                                               | Zusatzinfo                                                           | Installation               |
| <50>                                                    | <17>                                                                                    | <47>                                                                 | <30>                       |
|---------------------------------------------------------+-----------------------------------------------------------------------------------------+----------------------------------------------------------------------+----------------------------|
| *HAUPTMODULE*                                             |                                                                                         |                                                                      | siehe FlowmisOSinstall.org |
| LoginManager                                            | sddm                                                                                    | Alternative: lightdm                                                 | siehe FlowmisOSinstall.org |
| Text Editor + IDE                                       | DOOM EMACS                                                                              | Alternative: VS Code, Pycharm & Vim                                  | siehe FlowmisOSinstall.org |
| Mail Client                                             | Mu4e                                                                                    | Alternative: Thunderbird, Protonmail                                 | siehe FlowmisOSinstall.org |
| Window Manager                                          | qtile                                                                                   | Alternative: xmonad                                                  | siehe FlowmisOSinstall.org |
| CLI                                                     | fish, alacritty                                                                         | Alternative: zsh, bash,...                                           | siehe FlowmisOSinstall.org |
| Browser                                                 | Brave                                                                                   | Alternative: Firefox https://www.mozilla.org/                        | siehe FlowmisOSinstall.org |
| Passwortmanager                                         | KeepassXC                                                                               | Alternative: Pass (standard unix tool)                               | siehe FlowmisOSinstall.org |
|---------------------------------------------------------+-----------------------------------------------------------------------------------------+----------------------------------------------------------------------+----------------------------|
| *Nebenmodule*                                             |                                                                                         |                                                                      |                            |
| ScreenRecorder                                          | deepin-screen-recorder                                                                  | Desktop aufzeichnung (auch Screenshots)                              |                            |
| Screenshots                                             | flameshot (ähnlich snipping tool) -> Altern.: spectacle od. maim (Nachfolger von scrot) | gui & cli & mit mehreren Monitoren nutzbar (dmenu script schreiben?) |                            |
| Task-Manger                                             | htop                                                                                    | Alternative: interactive process viewer                              |                            |
| Programme öffnen                                        | rofi                                                                                    | Alternative: dmenu                                                   |                            |
| Backup                                                  | Timeshift (Backup und Rollback automation)                                              |                                                                      |                            |
| Office                                                  | LibreOffice                                                                             | https://www.libreoffice.org/                                         |                            |
| Videoplayer                                             | VLC                                                                                     | https://www.videolan.org/vlc/index.html                              |                            |
| Zeichenprogramm                                         | Pinta                                                                                   | Paint ersatz                                                         |                            |
| Musikplayer                                             | Clementine (+ Spotify Plugin)                                                           | braucht Premium Account                                              |                            |
| Musik hören/downloaden ohne Werbung                     | Nuclear Music Streaming App for Windows, Linux, Mac                                     | bissl im Graubereich aber nicer shit (siehe Video von DT)            |                            |
| Videokonverter                                          | Handbrake                                                                               |                                                                      |                            |
| Bildbearbeitung                                         | Gimp                                                                                    | https://www.gimp.org/ -> geiles Tool (kann auch screenshots)         |                            |
| Videobearbeitungsprogramm                               | Kdenlive                                                                                |                                                                      |                            |
| Inkscape is a vector graphics editor                    | Inkscape                                                                                | https://inkscape.org/                                                |                            |
| Virtual Box                                             | VirtualMachine                                                                          | https://www.virtualbox.org/                                          |                            |
| Spiele                                                  | Steam                                                                                   |                                                                      |                            |
| Multimediaplattform                                     | Kodi                                                                                    | Filme, Serien, Musik, Fernsehen und vieles mehr                      |                            |
| Ebook Manager und Reader                                | Calibre                                                                                 |                                                                      |                            |
| Audio Konverter                                         | DeaDBeeF                                                                                | https://deadbeef.sourceforge.io/                                     |                            |
| Kommunikationstool/Hub unterschiedlicher Messenger Apps | Rambox                                                                                  | https://rambox.pro/#home                                             |                            |
| Files zwischen Betriebssystemen tauschen                | NitroShare                                                                              | Daten übertragen auf Handy oder zwischen PCs                         |                            |
| video conferencing                                      | Jitsi                                                                                   | https://jitsi.org/                                                   |                            |
| Programminstaller                                       | Appstore                                                                                | https://app-outlet.github.io/                                        |                            |
| Paketverwaltung                                         | Synaptics                                                                               | sudo apt install synaptic                                            |                            |
| Desktopaussehen verändern                               | Gnome Tweak Tool                                                                        | Alternative: arch-tweak-tool (sinnvoll bei qtile?)                   |                            |
| System optimzer and application monitor                 | Stacer                                                                                  | https://github.com/oguzhaninan/Stacer                                |                            |

*** Rofi

#+begin_src sh
cd ~/.config/rofi/ && git clone --depth=1 https://github.com/adi1090x/rofi.git
#+end_src

#+begin_src sh :tangle tangle/config.rasi
  configuration {
    display-drun: "Applications:";
    display-window: "Windows:";
    drun-display-format: "{name}";
    font: "JetBrainsMono Nerd Font Medium 10";
    modi: "window,run,drun";
  }
  @theme "/dev/null"
  * {
    bg: #11121D;
    bg-alt: #444b6a;
    fg: #FFFFFF;
    fg-alt: #787c99;
    background-color: @bg;
    border: 0;
    margin: 0;
    padding: 0;
    spacing: 0;
  }
  window {
    width: 30%;
  }
  element {
    padding: 8 0;
    text-color: @fg-alt;
  }
  element selected {
    text-color: @fg;
  }
  element-text {
    background-color: inherit;
    text-color: inherit;
    vertical-align: 0.5;
  }
  element-icon {
    size: 30;
  }
  entry {
    background-color: @bg-alt;
    padding: 12;
    text-color: @fg;
  }
  inputbar {
    children: [prompt, entry];
  }
  listview {
    padding: 8 12;
    background-color: @bg;
    columns: 1;
    lines: 8;
  }
  mainbox {
    background-color: @bg;
    children: [inputbar, listview];
  }
  prompt {
    background-color: @bg-alt;
    enabled: true;
    padding: 12 0 0 12;
    text-color: @fg;
  }
  /* vim: ft=sass
#+end_src

- Falls ich diese config will muss ich oben das verschiebungsskript ergänzen. Momentan benutze ich diese flexiblere Variante: https://github.com/adi1090x/rofi mit den folgenden zwei Sourceblocks (qtile ist momentan auf diese angepasst)

#+begin_src rasi :tangle tangle/mane.rasi
/*
 *
 * Config bearbeitet von Mane
 *
 */

configuration {
	font:							"Noto Sans Bold 10";
    show-icons:                     true;
	icon-theme: 					"Papirus";
    display-drun: 					"";
    drun-display-format:            "{name}";
    disable-history:                false;
	sidebar-mode: 					false;
}

 * {
    background:                     #282c34a7;
    background-alt:              	#00000000;
    background-bar:                 #f2f2f215;
    foreground:                     #f2f2f2EE;
    accent:			            	#3DAEE966;
}

window {
    transparency:                   "real";
    background-color:               @background;
    text-color:                     @foreground;
	border:							0px;
	border-color:					@border;
    border-radius:                  0px;
	width:							100%;
	height:							100%;
}

prompt {
    enabled: 						true;
	padding: 						0.30% 1% 0% -0.5%;
	background-color: 				@background-alt;
	text-color: 					@foreground;
	font:							"FantasqueSansMono Nerd Font 12";
}

entry {
    background-color:               @background-alt;
    text-color:                     @foreground;
    placeholder-color:              @foreground;
    expand:                         true;
    horizontal-align:               0;
    placeholder:                    "Search";
    padding:                        0.10% 0% 0% 0%;
    blink:                          true;
}

inputbar {
	children: 						[ prompt, entry ];
    background-color:               @background-bar;
    text-color:                     @foreground;
    expand:                         false;
	border:							0% 0% 0% 0%;
    border-radius:                  12px;
	border-color:					@accent;
    margin:                         0% 25% 0% 25%;
    padding:                        1.5%;
}

listview {
    background-color:               @background-alt;
    columns:                        6;
    lines:                          4;
    spacing:                        0%;
    cycle:                          false;
    dynamic:                        true;
    layout:                         vertical;
}

mainbox {
    background-color:               @background;
	border:							0% 0% 0% 0%;
    border-radius:                  0% 0% 0% 0%;
	border-color:					@accent;
    children:                       [ inputbar, listview ];
    spacing:                       	8%;
    padding:                        10% 12.5% 10% 12.5%;
}

element {
    background-color:               @background-alt;
    text-color:                     @foreground;
    orientation:                    vertical;
    border-radius:                  0%;
    padding:                        2.5% 0% 2.5% 0%;
}

element-icon {
    background-color: 				@background-alt;
    text-color:       				inherit;
    horizontal-align:               0.5;
    vertical-align:                 0.5;
    size:                           60px;
    border:                         0px;
}

element-text {
    background-color: 				@background-alt;
    text-color:       				inherit;
    expand:                         true;
    horizontal-align:               0.5;
    vertical-align:                 0.5;
    margin:                         0.5% 0.5% -0.5% 0.5%;
}

element selected {
    background-color:               @background-bar;
    text-color:                     @foreground;
	border:							0% 0% 0% 0%;
    border-radius:                  12px;
    border-color:                  	@accent;
}
#+end_src

#+begin_src sh :tangle tangle/launcher.sh
#!/usr/bin/env bash

## Author  : Aditya Shakya
## Mail    : adi1090x@gmail.com
## Github  : @adi1090x
## Twitter : @adi1090x

# Available Styles
# >> Created and tested on : rofi 1.6.0-1
#
# blurry	blurry_full		kde_simplemenu		kde_krunner		launchpad
# gnome_do	slingshot		appdrawer			appdrawer_alt	appfolder
# column	row				row_center			screen			row_dock		row_dropdown

theme="mane"
dir="$HOME/.config/rofi/launchers/misc"

# comment these lines to disable random style
#themes=($(ls -p --hide="launcher.sh" $dir))
#theme="${themes[$(( $RANDOM % 16 ))]}"

rofi -no-lazy-grab -show drun -modi drun -theme $dir/"$theme"
#+end_src

*** Screencapture
*** Pycharm über snap

Install snap: https://snapcraft.io/install/snap-store/arch
Achtung vll muss man vor install pycharm rebooten!

#+begin_src sh
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install pycharm-community --classic
#+end_src

Öffnen falls anders nicht möglich über: snap run pycharm-community (snap help zeigt alles was man zu snap benötigt!)

*** Sonstige Programme

#+begin_src sh  :dir /sudo::
sudo pacman -S simplescreenrecorder viewnior deepin-screen-recorder flameshot gimp pinta vlc kdenlive thunderbird libreoffice virtualbox gpa rofi ditaa
#+end_src

*** Virtual Box

- virtualbox-guest-utils mit pacman installieren + VBoxClient-all als cmd in Startupskript um clipboard dragandrop etc. zu aktivieren + Einstellungen der VM -> Allgeimene -> Erweiterte -> Gemeinsame Zwischenablage auf bidirektional -> Drag'n'Drop auf bidirektional
  siehe [[https://wiki.archlinux.org/title/VirtualBox/Install_Arch_Linux_as_a_guest][HIER]]
- Gemeinsamer Ordner host & guest: sudo mount -t vboxsf sharewinarch /home/flowmis/sharewinarch/
- Achtung bei VirtualBox kann es zu Problemen mit Kernel kommen - installiere: sudo pacman -S virtualbox-host-modules-arch (kann sein dass andere bereits installiert sind dann fragt pacman ob diese gelöscht werden sollen und man muss es bestätigen)

**** Download

- Extension Pack und VirtualBox von [[https://www.virtualbox.org/wiki/Downloads][hier]]
- virtualbox kann ich in Arch auch durch meinen Packetmanager installieren

**** Extension pack installieren

- in Arch?
- Windows
  - check virtualbox for updates & update
  - download Extension pack and check if version is the same than virtual box
  - Einstellungen -> Zusatzpakete -> Paket das gedownloaded wurde installieren

**** Installieren von images

- =Neu= -> je nach Name den man der Maschine gibt sucht es automatisch richtige Version und Typ - ansonsten manuell wählen -> Einstellungen folgen bis Maschine erstellt wurde -> Maschine auswählen und =Ändern= drücken -> =System= -> uncheck =Diskettenlaufwerk= -> check =EFI aktivieren= -> =Prozessor= -> Einstellen wie viele Prozessoren ich geben will -> =Massenspeicher= -> Unter =Controller:IDE= die .iso Datei reinladen -> =Starten= der Maschine -> Maschine nach der Installation herunterfahren ->  =Massenspeicher=  und .iso entfernen -> Maschine nun fertig und kann gestartet werden

**** Keybindings

Mit rechter Strg Taste + f oder + c kann man in sklaierten Modus oder Fullscreen Modus wechseln


* Systemkonfigurationen

** Aussehen

Themes werden bei Linux meist mit GTK und Qt angefertigt und eingestellt -> folgende 2 Programme sind nötig: sudo pacman -S lxappearance qt5ct -> Hier kann man nach Themes suchen: https://archlinux.org/packages
    -> Falls qt5ct die Umgebungsvariable nicht findet: Einfach eine neue Zeile aufmachen in der Datei /etc/environment und dort folgendes reinschreiben: QT_QPA_PLATFORMTHEME=qt5ct
Es kann das meiste eingestellt werden mit qt5ct, lxappearance, grub-tweaks, archlinux-tweak-tool
Downloaden kann man vieles [[https://www.gnome-look.org/][HIER]]

*** Themes
*** Icons
*** Cursor

** Login Manager

- Ich verwende aktuell sddm mit sugar-candy als theme
- Nach der Installation ist der Standard Login Screen aktiviert und (hier: sudo nvim /etc/sddm.conf.d/kde_settings.conf) noch keine config vorhanden
- Um die config zu schreiben einfach das arch-tweak-tool installieren und in den su Modus wechseln und vom Terminal aus im su Modus mit ~archlinux-tweak-tool~ das Tool starten -> in Login wechseln und das zuvor installierte Theme (mit yay installiert) auswählen -> auto-login aktivieren und Desktop Session auf qtile stellen -> Apply Settings -> im Terminal oder in der Gui sollte nun erscheinen dass Theme aktiviert wurde!

#+begin_src sh :tangle no
yay -S sddm-sugar-dark sddm-sugar-candy-git     #Achtung: Geht nur im Terminal wegen Bestätigungen und sudo-privileges
#+end_src

- Anschließend sollte die config vorhanden sein und man kann Themes auch ohne das Tool wechseln indem man ([[/etc/sddm.conf.d/kde_settings.conf][hier]]: ~sudo nvim /etc/sddm.conf.d/kde_settings.conf~) unter Current das Theme angibt das man haben will -> wie z.B. hier: Current=sugar-dark oder Current=Sugar-Candy
- Einstellungen zum Theme kann man hier vornehmen:
  - [[/usr/share/sddm/themes/sugar-dark/theme.conf][sugar-dark Theme]]:

#+begin_src  :dir /sudo::
sudo cp -r /home/flowmis/FlowmisOS/Backgrounds/Hintergrund.jpg /usr/share/sddm/themes/sugar-dark/Hintergrund.jpg
sudo sed -i 's/Background="Background.jpg"/Background="Hintergrund.jpg"/g' /usr/share/sddm/themes/sugar-dark/theme.conf
#+end_src

  - [[/usr/share/sddm/themes/sugar-candy/theme.conf][sugar-candy-Theme]]

#+begin_src sh  :dir /sudo::
sudo cp -r /home/flowmis/FlowmisOS/Backgrounds/Hintergrund.jpg /usr/share/sddm/themes/sugar-candy/Backgrounds/Hintergrund.jpg
sudo chmod +666 /usr/share/sddm/themes/sugar-candy/Backgrounds/Hintergrund.jpg
sudo sed -i 's/Mountain.jpg"/Hintergrund.jpg"/g' /usr/share/sddm/themes/sugar-candy/theme.conf
sudo sed -i 's/BlurRadius="100"/BlurRadius="35"/g' /usr/share/sddm/themes/sugar-candy/theme.conf
sudo sed -i 's/HeaderText="Welcome!"/HeaderText="Hi Mane!"/g' /usr/share/sddm/themes/sugar-candy/theme.conf
sudo sed -i 's/TranslatePlaceholderUsername=""/TranslatePlaceholderUsername="Benutzername"/g' /usr/share/sddm/themes/sugar-candy/theme.conf
sudo sed -i 's/TranslatePlaceholderPassword=""/TranslatePlaceholderPassword="Passwort"/g' /usr/share/sddm/themes/sugar-candy/theme.conf
sudo sed -i 's/TranslateShowPassword=""/TranslateShowPassword="Passwort anzeigen"/g' /usr/share/sddm/themes/sugar-candy/theme.conf
sudo sed -i 's/TranslateLogin=""/TranslateLogin="Anmelden"/g' /usr/share/sddm/themes/sugar-candy/theme.conf
sudo sed -i 's/TranslateLoginFailedWarning=""/TranslateLoginFailedWarning="Anmeldung fehlgeschlagen"/g' /usr/share/sddm/themes/sugar-candy/theme.conf
sudo sed -i 's/TranslateCapslockWarning=""/TranslateCapslockWarning="Capslock aktiv"/g' /usr/share/sddm/themes/sugar-candy/theme.conf
sudo sed -i 's/TranslateReboot=""/TranslateReboot="Neu starten"/g' /usr/share/sddm/themes/sugar-candy/theme.conf
sudo sed -i 's/TranslateShutdown=""/TranslateShutdown="Herunterfahren"/g' /usr/share/sddm/themes/sugar-candy/theme.conf
#+end_src

    #+RESULTS:

** Keyboard

1. Befehl "localectl status" --> Abfrage momentane Keyboardeinstellungen
2. System Locales sollte bereits bei Locales eingestellt worden sein sodass nun nur noch folgende 2 Befehle ausgeführt werden müssen
   - localectl --no-convert set-keymap de-latin1-nodeadkeys
   - localectl --no-convert set-x11-keymap de pc105 deadgraveacute
3. Status erneut abfragen und nun sollte folgendes erscheinen
    >localectl status
        System Locale: LANG=de_DE.UTF-8
            VC Keymap: de-latin1-nodeadkeys
            X11 Layout: de
            X11 Model: pc105
            X11 Variant: deadgraveacute
4. Reboot!! (sonst sieht man keine Änderung)
5. Wenn locales alle passen es aber immer noch nicht geht probiere: setxkbmap -layout de

*** Touchpad einrichten

https://wiki.archlinux.org/title/Touchpad_Synaptics habe aber auch eine Datei die ich hier erstelle und die direkt mit meinen Einstellungen an die richtige Stelle kopiert wird -> siehe Installskript

#+begin_src shell :dir "/sudo::" :cache no
sudo cp -r /home/flowmis/FlowmisOS/tangle/70-synaptics.conf /etc/X11/xorg.conf.d/70-synaptics.conf
#+end_src

#+RESULTS:

#+begin_src shell :tangle tangle/70-synaptics.conf
# Example xorg.conf.d snippet that assigns the touchpad driver
# to all touchpads. See xorg.conf.d(5) for more information on
# InputClass.
# DO NOT EDIT THIS FILE, your distribution will likely overwrite
# it when updating. Copy (and rename) this file into
# /etc/X11/xorg.conf.d first.
# Additional options may be added in the form of
#   Option "OptionName" "value"
#
Section "InputClass"
        Identifier "touchpad catchall"
        Driver "synaptics"
        MatchIsTouchpad "on"
        Option "TapButton1" "1"
        Option "TapButton2" "3"
        Option "TapButton3" "2"
        Option "VertEdgeScroll" "on"
        Option "VertTwoFingerScroll" "on"
        Option "HorizEdgeScroll" "on"
        Option "HorizTwoFingerScroll" "on"
        Option "CircularScrolling" "on"
        Option "CircScrollTrigger" "2"
        Option "EmulateTwoFingerMinZ" "40"
        Option "EmulateTwoFingerMinW" "8"
        Option "CoastingSpeed" "0"
        Option "FingerLow" "30"
        Option "FingerHigh" "50"
        Option "MaxTapTime" "125"
# This option is recommend on all Linux systems using evdev, but cannot be
# enabled by default. See the following link for details:
# http://who-t.blogspot.com/2010/11/how-to-ignore-configuration-errors.html
#       MatchDevicePath "/dev/input/event*"
EndSection

Section "InputClass"
        Identifier "touchpad ignore duplicates"
        MatchIsTouchpad "on"
        MatchOS "Linux"
        MatchDevicePath "/dev/input/mouse*"
        Option "Ignore" "on"
EndSection

# This option enables the bottom right corner to be a right button on clickpads
# and the right and middle top areas to be right / middle buttons on clickpads
# with a top button area.
# This option is only interpreted by clickpads.
Section "InputClass"
        Identifier "Default clickpad buttons"
        MatchDriver "synaptics"
        Option "SoftButtonAreas" "50% 0 82% 0 0 0 0 0"
        Option "SecondarySoftButtonAreas" "58% 0 0 15% 42% 58% 0 15%"
EndSection

# This option disables software buttons on Apple touchpads.
# This option is only interpreted by clickpads.
Section "InputClass"
        Identifier "Disable clickpad buttons on Apple touchpads"
        MatchProduct "Apple|bcm5974"
        MatchDriver "synaptics"
        Option "SoftButtonAreas" "0 0 0 0 0 0 0 0"
EndSection
#+end_src

** SSH & GPG/PGP

- Installation der nötigen Pakete: ~sudo pacman -S openssh gnupg gpa~
  - openssh braucht man um ssh keys zu erstellen
  - gnupg ist die library des OpenPGP Standards
  - gpa ist einfache grafische Applikation um die gpg keys zu verwalten und zu en-/decrypten
- Erstellen eine ssh Keys: ssh-keygen oder ~ssh-keygen -t rsa -b 4096 -C "hedwig.lanter@gmx.net"~
- Passphrase ist PIN
** Externe Geräte anschließen
*** Speicher
- Festplatten anzeigen - wenn ich alles wie hier beschrieben installiert habe sollte es ausreichen folgendes zu installieren und pacman übernimmt das mounten von selbst
  - ~pacman -Syu~
  - ~pacman -S ntfs-3g~

Arch mit mehreren fest verbauten Festplatten:
1. ~fdisk -l~ zeigt mir den Namen der erkannten Festplatten
2. ~fdisk /dev/sdb~ Achtung: Name anpassen falls nicht sdb ist
3. Mit ~d~ alle Partitionen etc. löschen + mit ~g~ eine GPT Partitionstabelle erstellen + ~w~ zum schreiben
4. ~sudo mkfs -t ext4 /dev/sdb/~ um Dateisystemtyp und Lesbarkeit bzw. mount Prozess zu ermöglichen - quasi eine Formatierung
5. das es automatisch gemounted wird kann man /etc/fstab bearbeiten mit ~sudo nvim /etc/fstab~ -> sollte etwa so aussehen dann:
    #+begin_src sh
    # <file system> <dir> <type> <options> <dump> <pass>
    # /dev/sda3
    UUID=fa0743cf-60bb-4f21-8c85-09079ca46fbf       /                               ext4    rw,relatime         0 1

    # /dev/sda2
    UUID=064d6fb6-aa09-461b-9601-d1c0c1e24a39       none                            swap    defaults            0 2

    # /dev/sdb
    /dev/sdb                                        /home/flowmis/speicher-haupt    auto    noauto,user,exec    0 0
    #+end_src
*** Eingabegeräte Tastatur/Maus
- Logitech G910-Tastatur:
  - Installation: ~yay -S g810-led-git~ (alternativ siehe [[https://github.com/MatMoul/g810-led/blob/master/INSTALL.md][hier]])
  - Einrichtung:
    - ~sudo g810-led -p /etc/g810-led/profile~ # Load a profile
    - ~sudo g810-led -a 00ff00~ # Set color of all keys
    - ... weitere Beispiele sieher [[https://github.com/MatMoul/g810-led][hier]]
*** Bluetooth
- bluez etc. mit pacman installieren
- check status: ~sudo systemctl status bluetooth.service~ (damit scan und connect klappt muss hier enabled kommen)
- enable bluetooth.service: ~sudo systemctl enable bluetooth.service~
- Einstellungen vornhemen:
  - ~bluetoothctl~
  - ~power on~ (bluetoth an und aus ~power off~)
  - ~scan~ (zeigt pairable devices)
  - ~pair "devicename"~ (baut Verbindung auf)
  - ~connect "devicename"~ (verbindet zu einem Gerät)
  - ~trust "devicename"~ (ermöglicht automatisch eine Verbindung herzustellen)
  - ... - use Tab to see option or to fill with name of device etc.

** .xprofile

+ Wenn man Programme wie networmanager, volumemanager, Dropbox etc beim Start direkt laufen lassen will kann man die jeweiligen .desktop Dateien einfach in ~/.config/autostart kopieren (Ist dann Nutzerspezifisch! Andere Nutzer spawnen andere Programme automatisch je nachdem was sie im Ordner haben)
  -> um sie zu finden eignet sich der Befehl: sudo find / -iname "*.desktop"

#+begin_src sh :tangle tangle/.xprofile
#setxkbmap -layout de &
# xrandr -s 1920x1200 &                               # In VM aktivieren
# VBoxClient-all &                                    # DragDrop und gmeinsames Clipboars in VM aktivieren
# xrdb ~/.Xressources &
nitrogen --random --set-scaled /home/flowmis/FlowmisOS/Backgrounds &
nitrogen --restore &                                # setzt letztes Wallpaper -> mit & lauft es im Hintergrund?
picom -f &                                          # setzt Einstellungen des Compositors for Windows
# loadkeys de-latin1 &
# /usr/bin/emacs --daemon &
# cp /usr/share/applications/dropbox.desktop ~/.config/autostart/
# cp /usr/share/applications/nm-applet.desktop ~/.config/autostart/
# cp /usr/share/applications/volumeicon.desktop ~/.config/autostart/
# chmod +x dropbox.desktop nm-applet.desktop volumeicon.desktop
# gtk-launch dropbox.desktop &
# gtk-launch nm-applet.desktop &
# gtk-launch volumeicon.desktop &
# /usr/bin/xset r rate 200 50 &           #hier gerne noch etwas herumspielen -> stellt den Cursor Speed ein in Emacs und anderswo
#+end_src

** .Xressources

Vorher das Packet Material Cursors herunterladen ([[https://www.gnome-look.org/][HIER]]) und in lxappearance installieren

#+begin_src sh :tangle tangle/.Xressources
Xcursor.theme: Material Cursors
Xcursor.size: 30
#+end_src

** Picom

+ picom = fork von compton
+ Die picom.conf muss in //home/flowmis//.config/picom/ kopiert werden. Falls directory nicht vorhanden muss es erstellt werden (mkdir //home/flowmis//.config/picom). Falls man neue config Datei erstellen will ist es sinnvoll die Beispiel config die mit installiert wird zu kopieren und zu modifizieren: sudo cp //etc/xdg/picom.conf //home/flowmis//.config/picom/picom.conf
+ Weitere Infos unter: https://wiki.archlinux.org/title/picom
+ Meine config:

#+begin_src sh :tangle tangle/picom.conf
shadow = true;

# The blur radius for shadows, in pixels. (defaults to 12)
shadow-radius = 8;

# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)
shadow-opacity = .6

# The left offset for shadows, in pixels. (defaults to -15)
shadow-offset-x = -3;

# The top offset for shadows, in pixels. (defaults to -15)
shadow-offset-y = -3;

# Specify a list of conditions of windows that should have no shadow.
#
# examples:
#   shadow-exclude = "n:e:Notification";
#
# shadow-exclude = []
shadow-exclude = [
  "name = 'Notification'",
  "class_g = 'Conky'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "class_g = 'slop'",
  "class_g = 'Polybar'",
  "_GTK_FRAME_EXTENTS@:c"
];


# Fade windows in/out when opening/closing and when opacity changes,
#  unless no-fading-openclose is used.
# fading = false
fading = true;

# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)
# fade-in-step = 0.028
fade-in-step = 0.03;

# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)
# fade-out-step = 0.03
fade-out-step = 0.03;

# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)
# fade-delta = 10

# Specify a list of conditions of windows that should not be faded.
# don't need this, we disable fading for all normal windows with wintypes: {}
fade-exclude = [
  "class_g = 'slop'"   # maim
]

# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
# inactive-opacity = 0.8
inactive-opacity = 0.60

# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
# frame-opacity = 1.0
frame-opacity = 1.00

# Default opacity for dropdown menus and popup menus. (0.0 - 1.0, defaults to 1.0)
# menu-opacity = 1.0
# menu-opacity is depreciated use dropdown-menu and popup-menu instead.

#If using these 2 below change their values in line 510 & 511 aswell
popup_menu = { opacity = 0.8; }
dropdown_menu = { opacity = 0.8; }


# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.
# inactive-opacity-override = true
inactive-opacity-override = false;

# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
active-opacity = 1.00

# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)
# inactive-dim = 0.0

# Specify a list of conditions of windows that should always be considered focused.
# focus-exclude = []
focus-exclude = [
  "class_g = 'Cairo-clock'",
  "class_g = 'Bar'",                    # lemonbar
  "class_g = 'slop'"                    # maim
];

opacity-rule = [
  "100:class_g    = 'XTerm'",
  "100:class_g    = 'URxvt'",
  "100:class_g    = 'firefox'",
  "100:class_g    = 'Thunderbird'"
];

wintypes:
{
  normal = { fade = false; shadow = true; }
  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; }
  dnd = { shadow = true; }
  popup_menu = { opacity = 0.8; }
  dropdown_menu = { opacity = 0.8; }
};
#+end_src
+ picom in Terminal eingeben um zu aktivieren (oder picom -f)

** Audio, Wlan, Helligkeit, etc.

- Sound: ALSA ist in Linux vorinstalliert und checkt I/O nach Soundkarte etc. pulseaudio ist die Ebene higher und macht dass man die von Programmen erhaltene Audio an Karte gegeben wird und man steuern kann welcher Output etc. Pavucontrol ist das grafische Interface/der Client den ich nehme um alles zu steuern(Micro, Ton etc.) und Zeug wie bluez brauche ich um in pavucontrol auch Bluetooth zu haben. Bluetoothdevices verbinden etc mach ich mit Skript oder Shell und bluetoothctl (https://www.makeuseof.com/manage-bluetooth-linux-with-bluetoothctl/  <- wenn es nicht geht muss ich Bluetooth noch anmachen mit bluetoothctl power on)

#+begin_src sh  :dir /sudo::
sudo pacman -S mtools base-devel networkmanager nm-connection-editor network-manager-applet brightnessctl i3lock pulseaudio pavucontrol bluez bluez-utils pulseaudio-bluetooth pulseaudio-alsa man-pages-de xorg xorg-xbacklight acpi xfce4-power-manager systemd aspell aspell-de aspell-en pandoc or1k-elf-binutils texlive-core adapta-gtk-theme otf-fira-sans htop neofetch dunst bind bmon jq gvfs
#+end_src

